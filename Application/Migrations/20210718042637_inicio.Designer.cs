// <auto-generated />
using System;
using Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210718042637_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Application.Models.CuadroComparativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CuadroComparativo");
                });

            modelBuilder.Entity("Application.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Application.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProveedorRucPredeterminado")
                        .HasColumnType("bigint");

                    b.Property<string>("UnidadDeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Application.Models.ItemXPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemXPedido");
                });

            modelBuilder.Entity("Application.Models.ItemXProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FactorDeConversion")
                        .HasColumnType("decimal(2,2)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadDeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ItemXProveedor");
                });

            modelBuilder.Entity("Application.Models.OrdenDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CuadroComparativoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuadroComparativoId");

                    b.ToTable("OrdenDeCompra");
                });

            modelBuilder.Entity("Application.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActividadOperativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDeSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntregarA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoEstadoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeUso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoEstadoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Application.Models.PedidoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PedidoEstado");
                });

            modelBuilder.Entity("Application.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Ruc")
                        .HasColumnType("bigint");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Application.Models.SolicitudDeCotizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CuadroComparativoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudDeCotizacionEstadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("ValidacionDelJefeDeLogistica")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CuadroComparativoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("SolicitudDeCotizacionEstadoId");

                    b.ToTable("SolicitudDeCotizacion");
                });

            modelBuilder.Entity("Application.Models.SolicitudDeCotizacionEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SolicitudDeCotizacionEstado");
                });

            modelBuilder.Entity("Application.Models.Documento", b =>
                {
                    b.HasOne("Application.Models.Pedido", "Pedido")
                        .WithMany("DocumentoS")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Application.Models.ItemXPedido", b =>
                {
                    b.HasOne("Application.Models.Item", "Item")
                        .WithMany("ItemXPedidoS")
                        .HasForeignKey("ItemId");

                    b.HasOne("Application.Models.Pedido", "Pedido")
                        .WithMany("ItemXPedidoS")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Item");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Application.Models.ItemXProveedor", b =>
                {
                    b.HasOne("Application.Models.Item", "Item")
                        .WithMany("ItemXProveedorS")
                        .HasForeignKey("ItemId");

                    b.HasOne("Application.Models.Proveedor", "Proveedor")
                        .WithMany("ItemXProceedorS")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Item");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Application.Models.OrdenDeCompra", b =>
                {
                    b.HasOne("Application.Models.CuadroComparativo", "CuadroComparativo")
                        .WithMany("OrdenDeCompraS")
                        .HasForeignKey("CuadroComparativoId");

                    b.Navigation("CuadroComparativo");
                });

            modelBuilder.Entity("Application.Models.Pedido", b =>
                {
                    b.HasOne("Application.Models.PedidoEstado", "PedidoEstado")
                        .WithMany("PedidoS")
                        .HasForeignKey("PedidoEstadoId");

                    b.Navigation("PedidoEstado");
                });

            modelBuilder.Entity("Application.Models.SolicitudDeCotizacion", b =>
                {
                    b.HasOne("Application.Models.CuadroComparativo", "CuadroComparativo")
                        .WithMany("SolicitudDeCotizacionS")
                        .HasForeignKey("CuadroComparativoId");

                    b.HasOne("Application.Models.Pedido", "Pedido")
                        .WithMany("SolicitudDeCotizacionS")
                        .HasForeignKey("PedidoId");

                    b.HasOne("Application.Models.Proveedor", "Proveedor")
                        .WithMany("SolicitudDeCotizacionS")
                        .HasForeignKey("ProveedorId");

                    b.HasOne("Application.Models.SolicitudDeCotizacionEstado", "SolicitudDeCotizacionEstado")
                        .WithMany("SolicitudDeCotizacionS")
                        .HasForeignKey("SolicitudDeCotizacionEstadoId");

                    b.Navigation("CuadroComparativo");

                    b.Navigation("Pedido");

                    b.Navigation("Proveedor");

                    b.Navigation("SolicitudDeCotizacionEstado");
                });

            modelBuilder.Entity("Application.Models.CuadroComparativo", b =>
                {
                    b.Navigation("OrdenDeCompraS");

                    b.Navigation("SolicitudDeCotizacionS");
                });

            modelBuilder.Entity("Application.Models.Item", b =>
                {
                    b.Navigation("ItemXPedidoS");

                    b.Navigation("ItemXProveedorS");
                });

            modelBuilder.Entity("Application.Models.Pedido", b =>
                {
                    b.Navigation("DocumentoS");

                    b.Navigation("ItemXPedidoS");

                    b.Navigation("SolicitudDeCotizacionS");
                });

            modelBuilder.Entity("Application.Models.PedidoEstado", b =>
                {
                    b.Navigation("PedidoS");
                });

            modelBuilder.Entity("Application.Models.Proveedor", b =>
                {
                    b.Navigation("ItemXProceedorS");

                    b.Navigation("SolicitudDeCotizacionS");
                });

            modelBuilder.Entity("Application.Models.SolicitudDeCotizacionEstado", b =>
                {
                    b.Navigation("SolicitudDeCotizacionS");
                });
#pragma warning restore 612, 618
        }
    }
}
