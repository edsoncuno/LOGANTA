#pragma checksum "C:\Users\leo11\Desktop\HOYES\LOGANTA\Application\Views\Documento\Enviar.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1c1ca43d820b7190db823420d46568241697d20e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Documento_Enviar), @"mvc.1.0.view", @"/Views/Documento/Enviar.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\leo11\Desktop\HOYES\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\leo11\Desktop\HOYES\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c1ca43d820b7190db823420d46568241697d20e", @"/Views/Documento/Enviar.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03ea476b5db410d4405042b0a5ed991b4e6710c5", @"/Views/_ViewImports.cshtml")]
    public class Views_Documento_Enviar : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Documento/Enviar"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""container h1 mb-3 text-center"">Enviar Documentos</div>
<div class=""row"">
    <div class=""col-6"">
        <div class=""h3 text-center"">
            Pedido
        </div>
        <div class=""row"">
            <div class=""col-9"">
                <label class=""font-weight-bold"">Código: </label>
                <br />
                <label id=""id""></label>
                <br />
                <label class=""font-weight-bold"">Dirección del Solicitante: </label>
                <br />
                <label id=""direccionDeSolicitante""></label>
                <br />
                <label class=""font-weight-bold"">Entregar a: </label>
                <br />
                <label id=""entregarA""></label>
                <br />
                <label class=""font-weight-bold"">Actividad Operativa: </label>
                <br />
                <label id=""actividadOperativa""></label>
                <br />
                <label class=""font-weight-bold"">Motivo: </label>
             ");
            WriteLiteral(@"   <br />
                <label id=""motivo""></label>
            </div>
            <div class=""col-3"">
                <label class=""font-weight-bold"">Fecha: </label>
                <label id=""fecha""></label>
                <br />
                <label class=""font-weight-bold"">Hora: </label>
                <label id=""hora""></label>
            </div>
        </div>
    </div>
    <div class=""col-6"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c1ca43d820b7190db823420d46568241697d20e5769", async() => {
                WriteLiteral(@"
            <input type=""hidden"" name=""pedidoId"" id=""inputPedidoId""/>
            <div class=""input-group"">
                <div class=""custom-file"">
                    <input type=""file"" class=""custom-file-input"" name=""archivos"" multiple required>
                    <label class=""custom-file-label"">Elegir Documentos</label>
                </div>
            </div>
            <br />
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Observaciones</span>
                </div>
                <textarea class=""form-control"" name=""observaciones"" placeholder=""Este campo es opcional""></textarea>
            </div>
            <br />
            <input class=""btn btn-primary"" type=""submit"" value=""Enviar""/>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
</div>
<script>
    var pedidoId = obtenerIdDeUrl();
    var jsonPedido;
    var id = document.getElementById('id');
    var direccionDeSolicitante = document.getElementById('direccionDeSolicitante');
    var entregarA = document.getElementById('entregarA');
    var actividadOperativa = document.getElementById('actividadOperativa');
    var motivo = document.getElementById('motivo');
    var fecha = document.getElementById('fecha');
    var hora = document.getElementById('hora');
    urlRequestObtenerPedido = ""/Pedido/ObtenerPedidoConPedidoId/"" + pedidoId;
    window.addEventListener('load', function () {
        obtenerPedido();
    });
    function obtenerPedido() {
        this.fetch(urlRequestObtenerPedido).then(function (respuestaDelControlador) {
            return respuestaDelControlador.json();
        }).then(function (respuestaDelControladorConvertidoToJSON) {
            jsonPedido = JSON.parse(JSON.stringify(respuestaDelControladorConvertidoToJSON));
            m");
            WriteLiteral(@"ostrarPedido();
        });
    }
    function mostrarPedido() {
        id.innerHTML = jsonPedido[0].id;
        direccionDeSolicitante.innerHTML = jsonPedido[0].direccionDeSolicitante;
        entregarA.innerHTML = jsonPedido[0].entregarA;
        actividadOperativa.innerHTML = jsonPedido[0].actividadOperativa;
        motivo.innerHTML = jsonPedido[0].motivo;
        fecha.innerHTML = convertirFechaJsonEnFecha(jsonPedido[0].fecha);
        hora.innerHTML = convertirFechaJsonEnHora(jsonPedido[0].fecha);
    }
    function convertirFechaJsonEnFecha(fechaJson) {
        let fecha = /^\d\d\d\d[-]\d\d[-]\d\d/.exec(fechaJson);
        let año = /^[\d]+/.exec(fecha);
        let mes = /-[\d]+-/.exec(fecha);
        let dia = /[\d]+$/.exec(fecha);
        return dia + mes + año;
    }
    function convertirFechaJsonEnHora(fechaJson) {
        let hora = /\d\d:\d\d:\d\d/.exec(fechaJson);
        return /\d\d:\d\d/.exec(hora);
    }
    function obtenerIdDeUrl() {
        url = window.location");
            WriteLiteral(";\r\n        regexId = /[\\d]+$/;\r\n        return regexId.exec(url)[0];\r\n    }\r\n    /*\r\n     * Seccione para el POST\r\n     */\r\n    inputPedidoId = document.getElementById(\'inputPedidoId\');\r\n    inputPedidoId.value = pedidoId;\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
