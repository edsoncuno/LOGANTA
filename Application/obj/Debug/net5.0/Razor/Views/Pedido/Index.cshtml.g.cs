#pragma checksum "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\Pedido\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5191ac53e4c2808305ab8ed6c0552b1fc6740380"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pedido_Index), @"mvc.1.0.view", @"/Views/Pedido/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5191ac53e4c2808305ab8ed6c0552b1fc6740380", @"/Views/Pedido/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03ea476b5db410d4405042b0a5ed991b4e6710c5", @"/Views/_ViewImports.cshtml")]
    public class Views_Pedido_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""container text-center h1 mb-3"">Lista de Pedidos</div>
<table class=""table table-hover"">
    <thead>
        <tr>
            <th>
                C칩digo
            </th>
            <th>
                Actividad Operativa
            </th>
            <th>
                Tipo de Uso
            </th>
            <th>
                Fecha
            </th>
            <th>
                Hora
            </th>
            <th>
                Estado
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody id=""cuerpoDeLaTabla"">
    </tbody>
</table>
<script>
    var cuerpoDeLaTabla = document.getElementById('cuerpoDeLaTabla');
    var jsonPedidos;
    url = ""/Pedido/ObtenerTodosLosPedidos/"";
    window.addEventListener('load', function () {
        obtenerPedidos();
    });
    function obtenerPedidos() {
        this.fetch(url).then(function (respuestaDelControlador) {
            return respuestaDelControlador.json();
");
            WriteLiteral(@"        }).then(function (respuestaDelControladorConvertidoToJSON) {
            jsonPedidos = JSON.parse(JSON.stringify(respuestaDelControladorConvertidoToJSON));
            mostrarPedidos();
        });
    }
    function mostrarPedidos() {
        cuerpoDeLaTabla.innerHTML = '';
        for (let i = jsonPedidos.length - 1; 0 <= i; i--) {
            tr = document.createElement('tr');
            tr.innerHTML =
                '<td>' + jsonPedidos[i].id + '</td>' +
                '<td>' + jsonPedidos[i].actividadOperativa + '</td>' +
                '<td>' + jsonPedidos[i].tipoDeUso + '</td>' +
                '<td>' + convertirFechaJsonEnFecha(jsonPedidos[i].fecha) + '</td>' +
                '<td>' + convertirFechaJsonEnHora(jsonPedidos[i].fecha) + '</td>' +
                '<td>' + jsonPedidos[i].descripcion + '</td>' +
                '<td>' + '<a class=""btn border-dark"" href=""/Documento/Enviar/' + jsonPedidos[i].id + '"">A침adir Documento</a>' + '</td>';
            cuerpoDeLaTabla.app");
            WriteLiteral(@"endChild(tr);
        }
    }
    function convertirFechaJsonEnFecha(fechaJson) {
        let fecha = /^\d\d\d\d[-]\d\d[-]\d\d/.exec(fechaJson);
        let a침o = /^[\d]+/.exec(fecha);
        let mes = /-[\d]+-/.exec(fecha);
        let dia = /[\d]+$/.exec(fecha);
        return dia + mes + a침o;
    }
    function convertirFechaJsonEnHora(fechaJson) {
        let hora = /\d\d:\d\d:\d\d/.exec(fechaJson);
        return /\d\d:\d\d/.exec(hora);
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
