#pragma checksum "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\Pedido\MostrarAprobadoPorLogistica.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a0b27c04bb2e7b33ef1d96569b24ef457cf08e0c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pedido_MostrarAprobadoPorLogistica), @"mvc.1.0.view", @"/Views/Pedido/MostrarAprobadoPorLogistica.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Edson\Downloads\!\TP\LOGANTA\Application\Views\_ViewImports.cshtml"
using Application.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0b27c04bb2e7b33ef1d96569b24ef457cf08e0c", @"/Views/Pedido/MostrarAprobadoPorLogistica.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03ea476b5db410d4405042b0a5ed991b4e6710c5", @"/Views/_ViewImports.cshtml")]
    public class Views_Pedido_MostrarAprobadoPorLogistica : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""container w-100 h1 text-center mb-3"">Pedido Aprobado por Logística - Solicitar Cotización</div>
<div class=""row mb-3"">
    <div class=""col-8"">
        <label class=""font-weight-bold"">Código: </label>
        <label id=""id""></label>
        <br />
        <label class=""font-weight-bold"">Dirección de Solicitante: </label>
        <label id=""direccionDeSolicitante""></label>
        <br />
        <label class=""font-weight-bold"">Entregar a: </label>
        <label id=""entregarA""></label>
        <br />
        <label class=""font-weight-bold"">Actividad Operativa: </label>
        <label id=""actividadOperativa""></label>
        <br />
        <label class=""font-weight-bold"">Motivo: </label>
        <label id=""motivo""></label>
    </div>
    <div class=""col-4"">
        <label class=""font-weight-bold"">Fecha: </label>
        <label id=""fecha""></label>
        <br />
        <label class=""font-weight-bold"">Hora: </label>
        <label id=""hora""></label>
        <br />
        <but");
            WriteLiteral(@"ton class=""btn border-dark mb-1"" type=""button"" data-toggle=""modal"" data-target=""#modalEnviar"">Enviar</button>
    </div>
</div>
<table class=""table table-hover"">
    <thead>
        <tr class=""align-items-center"">
            <th>
                Código
            </th>
            <th>
                Descripción
            </th>
            <th>
                Cantidad
            </th>
            <th>
                Unidad de medida
            </th>
        </tr>
    </thead>
    <tbody id=""cuerpoDeLaTabla"">
    </tbody>
</table>
<!--Modal para la enviar-->
<div class=""modal fade"" id=""modalEnviar"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog modal-dialog-centered"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <div class=""modal-title h5"">Enviar Pedido a los Proveedores</div>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-h");
            WriteLiteral("idden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div");
            BeginWriteAttribute("class", " class=\"", 2182, "\"", 2190, 0);
            EndWriteAttribute();
            WriteLiteral(@">¿Esta seguro de realizar el envío a todos los proveedores?</div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""botonEnviar"">Si</button>
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">No</button>
            </div>
        </div>
    </div>
</div>
<script>
    var jsonPedido;
    var jsonItems;
    var cuerpoDeLaTabla = document.getElementById('cuerpoDeLaTabla');
    var id = document.getElementById('id');
    var direccionDeSolicitante = document.getElementById('direccionDeSolicitante');
    var entregarA = document.getElementById('entregarA');
    var actividadOperativa = document.getElementById('actividadOperativa');
    var motivo = document.getElementById('motivo');
    var fecha = document.getElementById('fecha');
    var hora = document.getElementById('hora');
    var numeroId = obtenerIdDeUrl();
    urlRequestObtenerPedido = ""/Pedido/ObtenerPedido/"" + numeroId;
    url");
            WriteLiteral(@"RequestObtenerItems = ""/Pedido/ObtenerItems/"" + numeroId;
    window.addEventListener('load', function () {
        obtenerPedido();
        obtenerItems();
    });
    function mostrarPedido() {
        id.innerHTML = jsonPedido[0].id;
        direccionDeSolicitante.innerHTML = jsonPedido[0].direccionDeSolicitante;
        entregarA.innerHTML = jsonPedido[0].entregarA;
        actividadOperativa.innerHTML = jsonPedido[0].actividadOperativa;
        motivo.innerHTML = jsonPedido[0].motivo;
        fecha.innerHTML = convertirFechaJsonEnFecha(jsonPedido[0].fecha);
        hora.innerHTML = convertirFechaJsonEnHora(jsonPedido[0].fecha);
    }
    function obtenerPedido() {
        this.fetch(urlRequestObtenerPedido).then(function (respuestaDelControlador) {
            return respuestaDelControlador.json();
        }).then(function (respuestaDelControladorConvertidoToJSON) {
            jsonPedido = JSON.parse(JSON.stringify(respuestaDelControladorConvertidoToJSON));
            mostrarPedido()");
            WriteLiteral(@";
        });
    }
    function obtenerItems() {
        this.fetch(urlRequestObtenerItems).then(function (respuestaDelControlador) {
            return respuestaDelControlador.json();
        }).then(function (respuestaDelControladorConvertidoToJSON) {
            jsonItems = JSON.parse(JSON.stringify(respuestaDelControladorConvertidoToJSON));
            mostrarItems();
        });
    }
    function mostrarItems() {
        jsonItems.forEach(function (object) {
            var tr = document.createElement('tr');
            tr.innerHTML =
                '<td>' + object.itemId + '</td>' +
                '<td>' + object.descripcion + '</td>' +
                '<td>' + object.cantidad + '</td>' +
                '<td>' + object.unidadDeMedida + '</td>';
            cuerpoDeLaTabla.appendChild(tr);
        });
    }
    function convertirFechaJsonEnFecha(fechaJson) {
        let fecha = /^\d\d\d\d[-]\d\d[-]\d\d/.exec(fechaJson);
        let año = /^[\d]+/.exec(fecha);
        let mes");
            WriteLiteral(@" = /-[\d]+-/.exec(fecha);
        let dia = /[\d]+$/.exec(fecha);
        return dia + mes + año;
    }
    function convertirFechaJsonEnHora(fechaJson) {
        let hora = /\d\d:\d\d:\d\d/.exec(fechaJson);
        return /\d\d:\d\d/.exec(hora);
    }
    function obtenerIdDeUrl() {
        url = window.location;
        regexId = /[\d]+$/;
        return regexId.exec(url)[0];
    }
    /*
    POST
     */
    document.getElementById(""botonEnviar"").onclick = enviar;
    function enviar() {
        fetch(""/Pedido/EnviarPedidoATodosLosProveedores/"", {
            method: ""POST"",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: jsonPedido[0].id })
        }).then(function (respuestaDelControlador) {
            return respuestaDelControlador.json();
        }).then(function (respuestaDelControladorConvertidoToJSON) {
            window.location.href = respuestaDelControladorConvertidoToJSON.newUrl;
       ");
            WriteLiteral(" });\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
